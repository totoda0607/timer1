#define NOTE_B4  494
#define NOTE_CS5 554
#define NOTE_D5  587
#define NOTE_E5  659
#define NOTE_FS4 370
#define NOTE_G4  392
#define NOTE_A4  440
#define NOTE_D4  294

int buzzerPin = 8;  // 피에조 부저의 핀 번호
int melody[] = {  // "할아버지의 낡은 시계" 멜로디를 저장할 배열
  NOTE_D4, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_G4, 0, NOTE_B4, NOTE_D5,
  NOTE_D5, NOTE_B4, NOTE_G4, NOTE_A4, NOTE_G4, 0, NOTE_D5, NOTE_D5,
  NOTE_D5, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_G4, 0, NOTE_B4, NOTE_D5,
  NOTE_D5, NOTE_B4, NOTE_G4, NOTE_A4, NOTE_G4, 0, NOTE_D5, NOTE_D5,
  NOTE_D5, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_G4, 0, NOTE_B4, NOTE_D5,
  NOTE_B4, NOTE_A4, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_B4, 0, NOTE_G4,
  NOTE_D5, NOTE_D5, NOTE_D5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_D5, NOTE_E5,
  NOTE_G4, NOTE_G4, NOTE_G4, NOTE_FS4, NOTE_G4, NOTE_A4, NOTE_B4, 0,
  NOTE_D5, NOTE_D5, NOTE_D5, NOTE_D5, NOTE_D5, NOTE_CS5, NOTE_D5, NOTE_E5,
  NOTE_G4, NOTE_G4, NOTE_G4, NOTE_FS4, NOTE_G4, NOTE_A4, NOTE_B4, 0
};
int noteDuration[] = {  // 음 길이를 저장할 배열
  250, 125, 125, 250, 250, 250, 250, 250,
  250, 125, 125, 250, 250, 250, 250, 250,
  250, 125, 125, 250, 250, 250, 250, 250,
  250, 125, 125, 250, 250, 250, 250, 250,
  250, 125, 125, 250, 250, 250, 250, 250,
  250, 125, 125, 250, 125, 125, 375, 125,
  250, 125, 125, 125, 125, 125, 250, 250,
  250, 125, 125, 125, 125, 125, 250, 250,
  250, 125, 125, 125, 125, 125, 250, 250
};
int noteIndex = 0;  // 현재 재생 중인 음 인덱스
unsigned long previousMillis = 0;  // 이전 시간 값을 저장할 변수
const long interval = 200;  // 간격을 설정할 변수

void setup() {
  pinMode(buzzerPin, OUTPUT);  // 핀을 출력 모드로 설정
}

void loop() {
  unsigned long currentMillis = millis();  // 현재 시간 값을 저장할 변수
    // 이전 시간 값과 간격(interval)을 비교하여 일정 시간이 지났으면 다음 음을 재생
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;  // 이전 시간 값을 현재 시간 값으로 업데이트
    int noteDurationValue = noteDuration[noteIndex];  // 현재 재생 중인 음의 길이
    if (noteDurationValue == 0) {  // 음의 길이가 0이면 일시 정지
      delay(interval);
    } else {  // 음의 길이가 0이 아니면 음을 재생
      tone(buzzerPin, melody[noteIndex], noteDurationValue);
      delay(noteDurationValue);
    }
    noteIndex++;  // 다음 음으로 인덱스 증가
  }

  // 모든 음을 재생했으면 처음부터 다시 재생
  if (noteIndex >= sizeof(melody) / sizeof(melody[0])) {
    noteIndex = 0;
  }
}
